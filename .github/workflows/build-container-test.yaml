name: Build Cver Test Container

on:
  workflow_call:
    inputs:
      tag-prefix:
        required: true
        type: string
      git-sha:
        required: true
        type: string
      cicd-version:
        required: true
        type: string
      harbor-user:
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    permissions:
      pull-requests: read
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ inputs.cicd-version }}
      credentials:
        username: ${{ inputs.harbor-user }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    strategy:
      fail-fast: true
    outputs:
      image-built: ${{ steps.Decider.outputs.test }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - name: Add Safe Dir
        run: |
          git config --global --add safe.directory /__w/cver/cver
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ secrets.PAT }}
          filters: |
            src:
              - 'docker/test/**'
              - 'src/requirements.txt'
              - 'tests/requirements.txt'

      - name: Decider
        run: |
          echo "# Docker Build: Cver Test" >> $GITHUB_STEP_SUMMARY
          echo "ALIX DEBUG: CHANGES-OUTPUT: ${{steps.changes.outputs.src}}"
          if [ "${{steps.changes.outputs.src}}" = "false" ]; then
            echo "Skipping Cver Test Build. No changes detected." >> $GITHUB_STEP_SUMMARY
            echo "image-built=false" >> "$GITHUB_OUTPUT"
          else
            echo "Running Cver Test Build" >> $GITHUB_STEP_SUMMARY
            echo "image-built=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: docker/login-action@v2
        with:
          registry: harbor.squid-ink.us
          username: ${{ inputs.harbor-user }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build Container
        if: steps.changes.outputs.src == 'true'
        run: |
          echo "Run Task: Build"
          task build-test

      - name: Push Container
        if: steps.changes.outputs.src == 'true'
        run: |
          VERSION_FILE="src/cver/api/version.py"
          VERSION=$(grep -o 'version = "[^"]*"' src/cver/api/version.py | cut -d '"' -f 2)
          IMAGE_ID=$(docker images --filter "reference=cver/cver-test" --format "{{.ID}}")
          # Docker Tag
          docker tag ${IMAGE_ID} harbor.squid-ink.us/cver/cver-test:${VERSION}
          docker tag ${IMAGE_ID} harbor.squid-ink.us/cver/cver-test:${{ inputs.tag-prefix }}-latest
          docker tag ${IMAGE_ID} harbor.squid-ink.us/cver/cver-test:git-sha-${{ inputs.git-sha }}

          # Docker Push
          docker push harbor.squid-ink.us/cver/cver-test:${VERSION}
          docker push harbor.squid-ink.us/cver/cver-test:${{ inputs.tag-prefix }}-latest
          docker push harbor.squid-ink.us/cver/cver-test:git-sha-${{ inputs.git-sha }}

          # GHA Summary
          echo "**Built:** harbor.squid-ink.us/cver/cver-test:${VERSION}" >> $GITHUB_STEP_SUMMARY
          echo "**Built:** harbor.squid-ink.us/cver/cver-test:${{ inputs.tag-prefix }}-latest" >> $GITHUB_STEP_SUMMARY
          echo "**Built:** harbor.squid-ink.us/cver/cver-test:git-sha-${{ inputs.git-sha }}" >> $GITHUB_STEP_SUMMARY

# Create a ephemeral deployment of Cver when the label "ephemeral" is added.
#modified_string=$(echo "$string" | sed 's/\//-/g')

name: Create-Ephemeral

on:
    push:
        branches: ["cicd"]
#   label:
#     types: [ created ]
#refs/pull/<pr_number>/merge
jobs:

  build-docker:
    runs-on: self-hosted
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:0.0.1
      credentials:
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    strategy:
      fail-fast: true
    # if: github.event.label.name == 'ephemeral'
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Get Ephem Name
        run: |
            GH_REF="${{ github.ref }}"
            echo "ALIX DEBUG: GITHUB REF: $GH_REF"
            # refs/heads/<branch_name>
            echo "FOO=${FOO}" >> $GITHUB_ENV
            exit 1
            IMAGE="harbor.squid-ink.us/politeauthority/cver-api:${{ github.sha }}"
            echo "ALIX DEBUG: ${{ github.sha }}"
            docker manifest inspect $IMAGE

      - name: Build Container
        run: |
          echo "Run Task: Build"
          export CVER_API_TAG="${{ github.sha }}"
          task build

      - name: Push Container
        run: |
          IMAGE_ID=$(docker images --filter "reference=politeauthority/cver-api" --format "{{.ID}}")
          docker tag ${IMAGE_ID} ${{ secrets.HARBOR_REGISTRY }}politeauthority/cver-api:${{ github.sha }}
          docker push ${{ secrets.HARBOR_REGISTRY }}politeauthority/cver-api:${{ github.sha }}
          echo "## Docker Build" >> $GITHUB_STEP_SUMMARY
          echo "**Built:** politeauthority/cver-api:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

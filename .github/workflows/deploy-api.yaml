name: Deploy Api

on:
  workflow_call:
    inputs:
      deployment-name:
        required: true
        type: string
      run-number:
        required: true
        type: string
      tag-name:
        required: true
        type: string
      cicd-version:
        required: true
        type: string
      harbor-user:
        required: true
        type: string

jobs:
  deploy:
    runs-on: self-hosted
    continue-on-error: true
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ inputs.cicd-version }}
      credentials:
        username: ${{ inputs.harbor-user }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
            token: ${{ secrets.PAT }}
            filters: |
              src:
                - 'helm/**'
      - name: Decider
        run: |
          echo "ALIX DEBUG: CHANGES-OUTPUT: ${{steps.changes.outputs.src}}"
          if [ "${{steps.changes.outputs.src}}" = "false" ]; then
            echo "Skipping Cver-Api tag update. No changes detected." >> $GITHUB_STEP_SUMMARY
          else
            echo "Running Cver-Api tag update changes detected." >> $GITHUB_STEP_SUMMARY
          fi
      - name: Deploy
        run: |
          API_BUILD="${{ inputs.api-build }}"
          if [ "$API_BUILD" = "false" ]; then
            if ["${{ inputs.deployment-name }}" == "test"]; then
              
            fi
            IMAGE_TAG="${{ inputs.deployment-name }}-latest"
            echo "ALIX DEBUG- DIDNT BUILD API USING DEV-LATEST"
          else
            IMAGE_TAG="${{ inputs.tag-name }}"
          fi
          IMAGE_TAG="dev-latest"
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          chmod 600 ~/.kube/config.yaml
          DEPLOYED_AT=$(date +"%Y-%m-%d %T")
          helm dependency build helm/cver-api
          helm upgrade --install \
            --namespace=cver \
            cver-api-test-${{ github.run_number }} \
            helm/cver-api/ \
            --wait \
            --timeout=120s \
            -f helm/cver-api/values-quigley-${{ inputs.deployment-name }}.yaml \
            --set "image.tag=${IMAGE_TAG}" \
            --set "app.dbName=cver_${{ inputs.run-number }}" \
            --set "app.deployedAt=${DEPLOYED_AT}"
          echo "# Deployed"
          echo "Created Helm deployment: cver-api-${{ inputs.deployment-name }}-${{ inputs.run-number }}" >> $GITHUB_STEP_SUMMARY

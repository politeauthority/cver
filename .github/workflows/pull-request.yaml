# Cver Api - Pull Request

name: Pull Request

on:
  pull_request:
    branches: ["stage"]

concurrency:
  group: ${{github.ref }}
  cancel-in-progress: false

jobs: 
  
  build-cver:
    uses: ./.github/workflows/build-python.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read

  lint:
    uses: ./.github/workflows/lint.yaml
    secrets: inherit
    permissions:
      pull-requests: read
      contents: read
    with:
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  build-api:
    needs: [build-cver, lint]
    uses: ./.github/workflows/build-container-api.yaml
    secrets: inherit
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "dev"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  build-engine:
    needs: [build-cver, lint]
    uses: ./.github/workflows/build-container-engine.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "dev"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  deploy-api:
    needs: [build-api, build-cver, lint]
    uses: ./.github/workflows/deploy-api.yaml
    secrets: inherit 
    with:
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  deploy-engine:
    needs: [build-engine, build-cver, lint]
    uses: ./.github/workflows/deploy-engine.yaml
    secrets: inherit 
    with:
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  test-api:
    needs: [deploy-api]
    if: ${{ needs.deploy-api.result == 'success' }}
    uses: ./.github/workflows/regression-api.yaml
    secrets: inherit 
    with:
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  test-engine:
    needs: [deploy-api, deploy-engine]
    if: ${{ needs.deploy-engine.result == 'success' }} and ${{ needs.deploy-api.result == 'success' }}
    uses: ./.github/workflows/regression-enigne.yaml
    secrets: inherit 
    with:
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  remove-ephem:
    runs-on: self-hosted
    needs: [test-api, test-engine]
    if: ${{ needs.deploy-api.result == 'success' }}
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ vars.CICD_VERSION }}
      credentials:
        username: ${{ vars.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Tear Down Api
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          echo "Remove the database"
          TEST_POD=$(kubectl get pods -n cver -l app.kubernetes.io/instance=cver-api-test-${{ github.run_number }} --no-headers | cut -d' ' -f1)
          # kubectl exec -n cver -it ${TEST_POD} -c cver-api -- /bin/cver-db-destroy
          echo "Remove the helm installation"
          helm uninstall \
            --namespace=cver \
            cver-api-test-${{ github.run_number }}
          echo "Uninstalled Helm deployment cver-api-test-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

      - name: Tear Down Engine
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          echo "Remove the helm installation"
          helm uninstall \
            --namespace=cver \
            cver-engine-test-${{ github.run_number }}
          echo "Uninstalled Helm deployment cver-engine-test-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

            
# End File: cver/.github/workflows/pull-request.yaml

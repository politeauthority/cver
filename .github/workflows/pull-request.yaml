# Cver Api - Pull Request

name: Cver-Api-Pull-Request

on:
  pull_request:
    branches: ["staging"]

jobs:
  build-python:
    runs-on: self-hosted
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install flake8 pytest
          pip install -r src/requirements.txt

      - name: Build Packages
        run: |
          cd src/
          python3 setup.py build
          pip install .

      - name: Source Linter
        run: |
          flake8 src/cver --config=src/flake8 --count --show-source --statistics

      - name: Tests Linter
        run: |
          flake8 tests --config=tests/flake8 --count --show-source --statistics

      - name: Unit Tests
        run: |
          pytest -vvv tests/unit --md report.md
          cat report.md >> $GITHUB_STEP_SUMMARY

  # lint-helm:
  #   runs-on: self-hosted
  #   strategy:
  #     fail-fast: true
  #   container:
  #     image: politeauthority/polite-cicd:0.0.1
  #   strategy:
  #     fail-fast: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Lint Helm
  #       run: |
  #         helm lint ./helm/cver-api

  build-docker:
    runs-on: self-hosted
    needs: build-python
    container:
      image: ${{ secrets.HARBOR_REGISTRY }}politeauthority/polite-cicd:0.0.1
      credentials:
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Build Container
        run: |
          echo "Run Task: Build"
          export CVER_API_TAG="${{ github.sha }}"
          task build

      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Push Container
        run: |
          IMAGE_ID=$(docker images --filter "reference=politeauthority/cver-api" --format "{{.ID}}")
          docker tag ${IMAGE_ID} ${{ secrets.HARBOR_REGISTRY }}politeauthority/cver-api:${{ github.sha }}
          docker push ${{ secrets.HARBOR_REGISTRY }}politeauthority/cver-api:${{ github.sha }}
          echo "## Docker Build" >> $GITHUB_STEP_SUMMARY
          echo "**Built:** politeauthority/cver-api:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

  deploy-ephem:
    runs-on: self-hosted
    needs: build-docker
    continue-on-error: true
    container:
      image: ${{ secrets.HARBOR_REGISTRY }}politeauthority/polite-cicd:0.0.1
      credentials:
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          kubectl get pods -n cver
          helm dependency build helm/cver-api
          helm upgrade --install \
            --namespace=cver \
            cver-api-test-${{ github.run_number }} \
            helm/cver-api/ \
            --wait \
            -f helm/cver-api/quigley-test-values.yaml \
            --set "image.tag=${{ github.sha }}" \
            --set "app.dbName=cver_${{ github.run_number }}"

  test-ephem:
    runs-on: self-hosted
    needs: deploy-ephem
    container:
      image: ${{ secrets.HARBOR_REGISTRY }}politeauthority/polite-cicd:0.0.1
      credentials:
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Execute Tests
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          TEST_POD=$(kubectl get pods -l app.kubernetes.io/instance=cver-api-test-${{ github.run_number }} --no-headers | cut -d' ' -f1)
          kubectl exec -it ${TEST_POD} -c cver-api -- pytest -vvv /tests/regression --md regression-report.md
          REPORT=$(kubectl exec -it ${TEST_POD} -c cver-api -- cat regression-report.md)
          echo "$REPORT"
          echo "${REPORT}" >> $GITHUB_STEP_SUMMARY


  remove-ephem:
    runs-on: self-hosted
    needs: test-ephem
    container:
      image: ${{ secrets.HARBOR_REGISTRY }}politeauthority/polite-cicd:0.0.1
      credentials:
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Tear Down
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          echo "Remove the database"
          TEST_POD=$(kubectl get pods -l app.kubernetes.io/instance=cver-api-test-${{ github.run_number }} --no-headers | cut -d' ' -f1)
          kubectl exec -it ${TEST_POD} -c cver-api -- /bin/cver-db-destroy
          echo "Remove the helm installation"
          helm uninstall \
            --namespace=cver \
            cver-api-test-${{ github.run_number }}

# End File: cver/.github/webserver/pull-request.yaml

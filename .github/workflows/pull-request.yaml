# Cver Api - Pull Request

name: Pull Request

on:
  pull_request:
    branches: ["stage"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  
  build-python:
    runs-on: self-hosted
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install flake8 pytest
          pip install -r src/requirements.txt

      - name: Build Packages
        run: |
          cd src/
          python3 setup.py build
          pip install .

      - name: Source Linter
        run: |
          flake8 src/cver --config=src/flake8 --count --show-source --statistics

      - name: Tests Linter
        run: |
          flake8 tests --config=tests/flake8 --count --show-source --statistics

      - name: Unit Tests
        run: |
          pytest tests/unit --md report.md
          cat report.md >> $GITHUB_STEP_SUMMARY

  lint:
    uses: ./.github/workflows/lint.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read
    with:
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  api:
    uses: ./.github/workflows/build-container-api.yaml
    secrets: inherit
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "dev"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  engine:
    uses: ./.github/workflows/build-container-engine.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "dev"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  ephem:
    needs: [api, build-python, lint]
    uses: ./.github/workflows/deploy-api.yaml
    secrets: inherit 
    with:
      api-build: ${{ needs.api.outputs.src }}
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  test-ephem:
    needs: [ephem, engine]
    uses: ./.github/workflows/regression.yaml
    secrets: inherit 
    with:
      deployment-name: "test"
      run-number: ${{ github.run_number }}
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  remove-ephem:
    runs-on: self-hosted
    needs: test-ephem
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ vars.CICD_VERSION }}
      credentials:
        username: ${{ vars.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Tear Down
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          echo "Remove the database"
          TEST_POD=$(kubectl get pods -n cver -l app.kubernetes.io/instance=cver-api-test-${{ github.run_number }} --no-headers | cut -d' ' -f1)
          # kubectl exec -n cver -it ${TEST_POD} -c cver-api -- /bin/cver-db-destroy
          echo "Remove the helm installation"
          helm uninstall \
            --namespace=cver \
            cver-api-test-${{ github.run_number }}
          echo "Uninstalled Helm deployment cver-api-test-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

# End File: cver/.github/workflows/pull-request.yaml

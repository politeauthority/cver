# Cver Api - Push Stage

name: Push Stage

on:
  push:
    branches: ["stage"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-python:
    uses: ./.github/workflows/build-python.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read

  lint:
    uses: ./.github/workflows/lint.yaml
    secrets: inherit
    permissions:
      pull-requests: read
      contents: read
    with:
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  api:
    uses: ./.github/workflows/build-container-api.yaml
    secrets: inherit
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "stage"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  engine:
    uses: ./.github/workflows/build-container-engine.yaml
    secrets: inherit 
    permissions:
      pull-requests: read
      contents: read
    with:
      tag-prefix: "stage"
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  deploy:
    needs: [api, build-python, lint]
    uses: ./.github/workflows/deploy-api.yaml
    secrets: inherit 
    with:
      deployment-name: "stage"
      run-number: ${{ github.run_number }}
      tag-name: "${{ github.sha }}"
      cicd-version: "${{ vars.CICD_VERSION }}"
      harbor-user: "${{ vars.HARBOR_USER }}"

  test-stage:
    runs-on: self-hosted
    needs: deploy
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ vars.CICD_VERSION }}
      credentials:
        username: ${{ vars.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Execute Tests
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          TEST_POD=$(kubectl get -n cver pods -l app.kubernetes.io/instance=cver-api-stage --no-headers | cut -d' ' -f1)
          kubectl exec -n cver -it ${TEST_POD} -c cver-api -- pytest -vvv /tests/regression --md regression-report.md
          REPORT=$(kubectl exec -n cver -it ${TEST_POD} -c cver-api -- cat /app/cver/regression-report.md)
          echo "$REPORT"
          echo "${REPORT}" >> $GITHUB_STEP_SUMMARY

# End File: cver/.github/workflows/push-stage.yaml

name: Regression

on:
  workflow_call:
    inputs:
      deployment-name:
        required: true
        type: string
      run-number:
        required: true
        type: string
      cicd-version:
        required: true
        type: string
      harbor-user:
        required: true
        type: string

jobs:
  regression-api:
    runs-on: self-hosted
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ inputs.cicd-version }}
      credentials:
        username: ${{ inputs.harbor-user }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      # This needs to be updated before staging can use it.
      - name: Execute Tests
        run: |
          # @todo: Make this more dynamic
          if [ "${{ inputs.deployment-name }}" = "test" ]; then
            NAMESPACE="cver-test"
          else
            NAMESPACE="cver-stage"
          fi
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          TEST_POD=$(kubectl get -n cver pods -l app.kubernetes.io/instance=cver-api-${{ inputs.deployment-name }}-${{ inputs.run-number }} --no-headers | cut -d' ' -f1)
          kubectl exec -n cver -it ${TEST_POD} -c cver-api -- pytest -vvv /tests/regression/api --md regression-report.md
          REPORT=$(kubectl exec -n cver -it ${TEST_POD} -c cver-api -- cat /app/cver/regression-report.md)
          echo "$REPORT"
          echo "${REPORT}" >> $GITHUB_STEP_SUMMARY

  regression-client:
    runs-on: self-hosted
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ inputs.cicd-version }}
      credentials:
        username: ${{ inputs.harbor-user }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      # This needs to be updated before staging can use it.
      - name: Execute Tests
        run: |
          # @todo: Make this more dynamic
          if [ "${{ inputs.deployment-name }}" = "test" ]; then
            NAMESPACE="cver-test"
          else  
            NAMESPACE="cver-stage"
          fi
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          TEST_POD=$(kubectl get -n cver pods -l app.kubernetes.io/instance=cver-api-${{ inputs.deployment-name }}-${{ inputs.run-number }} --no-headers | cut -d' ' -f1)
          kubectl exec -n cver -it ${TEST_POD} -c cver-api -- pytest -vvv /tests/regression/cver_client --md regression-report.md
          REPORT=$(kubectl exec -n ${NAMESPACE} -it ${TEST_POD} -c cver-api -- cat /app/cver/regression-report.md)
          echo "$REPORT"
          echo "${REPORT}" >> $GITHUB_STEP_SUMMARY

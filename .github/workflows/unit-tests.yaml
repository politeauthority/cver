name: Run Unit Tests

on:
  workflow_call:
    inputs:
      run-number:
        required: true
        type: string
      cicd-version:
        required: true
        type: string
      harbor-user:
        required: true
        type: string

jobs:
  run:
    runs-on: self-hosted
    continue-on-error: false
    container:
      image: harbor.squid-ink.us/politeauthority/polite-cicd:${{ inputs.cicd-version }}
      credentials:
        username: ${{ inputs.harbor-user }}
        password: ${{ secrets.HARBOR_PASSWORD }}
    steps:
      - name: Run Unit Tests
        run: |
          if [ "${{ inputs.deployment-name }}" = "test" ]; then
            NAMESPACE="cver-test"
            POD_SEARCH="cver-test-${{ inputs.deployment-name }}-${{ inputs.run-number }}"
          else  
            NAMESPACE="cver-stage"
            POD_SEARCH="cver-test-stage"
          fi
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config.yaml
          export KUBECONFIG=~/.kube/config.yaml
          TEST_POD=$(kubectl get -n ${NAMESPACE} pods -l app.kubernetes.io/instance=${POD_SEARCH} --no-headers | cut -d' ' -f1)
          kubectl exec -n ${NAMESPACE} -it ${TEST_POD} -- cver-cicd-unit
          REPORT=$(kubectl exec -n ${NAMESPACE} -it ${TEST_POD} -- cat /report/unit-report.txt)
          echo "$REPORT"
          echo "${REPORT}" >> $GITHUB_STEP_SUMMARY

          # COVERAGE=$(awk '/---------- coverage: platform linux,/{flag=1} flag' "./coverage.txt")
          # COVERAGE=$(awk '/TOTAL/{print $NF}' "./coverage.txt")
          # cat report.md >> $GITHUB_STEP_SUMMARY
          # echo "**Coverage:** ${COVERAGE}" >> $GITHUB_STEP_SUMMARY
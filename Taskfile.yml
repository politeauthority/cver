version: '3'
vars:
  CVER_DIR: "."

tasks:
  build:
    cmds:
      - cp -r {{.CVER_DIR}}/src {{.CVER_DIR}}/docker/api/
      - cp -r {{.CVER_DIR}}/tests {{.CVER_DIR}}/docker/api/
      - rm -rf {{.CVER_DIR}}/docker/api/src/build
      - rm -rf {{.CVER_DIR}}/docker/api/src/dist
      - rm -rf {{.CVER_DIR}}/docker/api/src/cver.egg-info
      - |
        if [ -z ${CVER_API_TAG} ]; then
          CVER_API_TAG="dev"
        fi
        CLI_ARGS="{{ .CLI_ARGS }}"
        if [ -z ${CLI_ARGS} ]; then
          TARGET="tests"
        else
          TARGET=$CLI_ARGS
        fi
        echo "Building Target: ${TARGET}"
        docker build \
          -t politeauthority/cver-api:${CVER_API_TAG} \
          --build-arg CVER_BUILD="${CVER_API_TAG}" \
          --build-arg DOCKER_REGISTRY="harbor.squid-ink.us/cache/library" \
          --target ${TARGET} \
          {{.CVER_DIR}}/docker/api
      - rm -rf {{.CVER_DIR}}/docker/api/src
      - rm -rf {{.CVER_DIR}}/docker/api/tests
      - echo "Completed build politeauthority/cver-api"
    silent: false
  dev-run:
    cmds:
      - |
        docker run --name="cver-api" -d \
          -v {{.CVER_DIR}}/src:/app \
          -v {{.CVER_DIR}}/tests:/tests \
          -p 80:80 \
          -e CVER_DB_HOST="mysql" \
          -e CVER_DB_PASS="${CVER_DB_PASS}" \
          -e CVER_TEST_CLIENT_ID="${CVER_TEST_CLIENT_ID}" \
          -e CVER_TEST_API_KEY="${CVER_TEST_API_KEY}" \
          -e CVER_SECRET_KEY="${CVER_SECRET_KEY}" \
          -e CVER_TEST="true" \
          -e CVER_JWT_EXPIRE_MINUTES=1440 \
          politeauthority/cver-api:dev \
          tail -f /dev/null
      - docker network connect cver cver-api
      - echo "Success"
    silent: false
  dev-exec:
    cmds:
      - docker exec -it cver-api bash
  dev-stop:
    cmds:
      - docker rm -f cver-api
  cver-build:
    cmds:
      - |
        cd src
        python3 setup.py build
        python3 setup.py install
  pre-commit:
    cmds: 
      - |
        echo "Pre Commit"
        cd ./src
        echo "src/"
        flake8 cver --config=flake8 --count --show-source --statistics
      - |
        echo "tests/"
        flake8 tests/ --config=tests/flake8 --count --show-source --statistics
    silent: true
  k8s-exec-stage:
    cmds:
      - |
        POD=$(kubectl get pods -l app.kubernetes.io/name=stage --no-headers | cut -d' ' -f1)
        echo "Logging into $POD"
        kubectl exec -it -c cver-api ${POD} -- bash
    silent: true

  k8s-pf-stage:
    cmds:
      - |
        kubectl port-forward svc/cver-api-stage 5003:80
    silent: true
  
  cicd-decode-k8s-config:
    cmds:
      - |
        echo "Argument: {{ .CLI_ARGS }}"
        mkdir ~/.kube
        echo "{{ .CLI_ARGS }}" | base64 -d > ~/.kube/config.yaml
        export KUBECONFIG=~/.kube/config.yaml
        chmod 600 ~/.kube/config.yaml

  cicd-version:
    cmds:
      - |
        VERSION_FILE="src/cver/api/version.py"
        VERSION=$(grep -o 'version = "[^"]*"' src/cver/api/version.py | cut -d '"' -f 2)
        echo "$VERSION"
    silent: true
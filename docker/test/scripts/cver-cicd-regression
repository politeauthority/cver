#!/bin/sh -l
# Cver Test
# Cver CICD Regression
set -e
if [ -z "$CVER_CICD" ]; then
    CVER_CICD="false"
fi

echo "Using Cver branch: ${CVER_BRANCH}"

CVER_TEST_MODULE="$1"
if [[ -z "$CVER_TEST_MODULE" ]]; then
    echo "Test Module: All"
    CVER_TEST_MODULE="all"
else
    echo "Test Module: ${CVER_TEST_MODULE}"
fi

if [ "$CVER_CICD" = "true" ]; then
    echo "Using Cver branch: ${CVER_BRANCH}"
    WORKING_DIR="/checkout-${CVER_TEST_MODULE}}/cver"
    TEST_DIR="${WORKING_DIR}/cver/tests"
    rm -rf $WORKING_DIR
    mkdir /checkout-api
    mkdir -p /report
    cd $WORKING_DIR
    git clone https://github.com/politeauthority/cver.git
    cd  cver
    git fetch origin
    git checkout $CVER_BRANCH
    echo "Building Cver"
    cd ${WORKING_DIR}/cver/src
    pip3 install .
    echo "Building Cver Tests"
    cd ${TEST_DIR}
    pip3 install .
else
    WORKING_DIR="/current"
    mkdir -p $WORKING_DIR
    TEST_DIR="/tests"
    mkdir -p /report
    echo "Building Cver"
    cd ${WORKING_DIR}/cver
    pip3 install .
    echo "Building Cver Tests"
    cd ${WORKING_DIR}/cver/tests
    pip3 install .
fi
echo "Running tests against code src: ${WORKING_DIR}"
echo "Using tests from: ${TEST_DIR}"



echo "Running Regression: ${CVER_TEST_MODULE}"
cd  $TEST_DIR/regression
if [ "$CVER_TEST_MODULE" = "all" ]; then
    pytest -vvv . --md /report/regression-report.md
else
    pytest -vvv ${CVER_TEST_MODULE} --md /report/regression-report.md
fi


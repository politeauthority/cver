#!/bin/sh -l
# Cver Test
# Cver CICD Regression
set -e
if [ -z "$CVER_CICD" ]; then
    CVER_CICD="false"
fi

echo "Using Cver branch: ${CVER_BRANCH}"
echo "Primary Client ID: ${CVER_CLIENT_ID}"
echo "Admin itClient ID: ${CVER_CLIENT_ID}"


CVER_TEST_MODULE="$1"
if [[ -z "$CVER_TEST_MODULE" ]]; then
    echo "Test Module: All"
    CVER_TEST_MODULE="all"
else
    echo "Test Module: ${CVER_TEST_MODULE}"
fi

echo "Using Cver branch: ${CVER_BRANCH}"
mkdir -p /cicd
WORKING_DIR="/cicd/${CVER_TEST_MODULE}"
TEST_DIR="${WORKING_DIR}/cver/tests"
mkdir -p $WORKING_DIR
echo "WORKDIR: ${WORKING_DIR}/cver"

if [ ! -d "$WORKING_DIR/cver" ]; then
    echo "$DIRECTORY does not exist, cloning Cver"
    cd ${WORKING_DIR}
    git clone https://github.com/politeauthority/cver.git
    cd  cver
    git fetch origin
    git checkout $CVER_BRANCH
    echo "Building Cver"
    cd ${WORKING_DIR}/cver/src
    pip3 install .
    echo "Building Cver Tests"
    cd ${TEST_DIR}
    pip3 install .
    mkdir -p /report
else
    echo "Cver already exsits, skipping clone"
fi

echo "Running tests against code src: ${WORKING_DIR}"
echo "Using tests from: ${TEST_DIR}"

echo "Running Regression: ${CVER_TEST_MODULE}"
cd  $TEST_DIR/regression
if [ "$CVER_TEST_MODULE" = "all" ]; then
    pytest -vvv . --md /report/regression-report.md
else
    pytest -vvv ${CVER_TEST_MODULE} --md /regression-report-${CVER_TEST_MODULE}.md
fi


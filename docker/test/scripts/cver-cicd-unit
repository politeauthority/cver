#!/bin/sh -l
# Cver Test
# Cver CICD Unit
set -e
echo "Cver Cicd Unit"
if [ -z "$CVER_CICD" ]; then
    CVER_CICD="false"
fi

echo "Using Cver branch: ${CVER_BRANCH}"

if [ "$CVER_CICD" = "true" ]; then
    echo "Using Cver branch: ${CVER_BRANCH}"
    mkdir -p /cicd
    WORKING_DIR="/cicd/"
    TEST_DIR="${WORKING_DIR}/cver/tests"
    mkdir -p $WORKING_DIR
    echo "WORKDIR: ${WORKING_DIR}/cver"

    if [ ! -d "$WORKING_DIR/cver" ]; then
        echo "$DIRECTORY does not exist, cloning Cver"
        cd ${WORKING_DIR}
        git clone https://github.com/politeauthority/cver.git
        cd  cver
        git fetch origin
        git checkout $CVER_BRANCH
        echo "Building Cver"
        cd ${WORKING_DIR}/cver/src
        pip3 install .
        echo "Building Cver Tests"
        cd ${TEST_DIR}
        pip3 install .
        mkdir -p /report
    else
        echo "Cver already exsits, skipping clone"
    fi

else
    WORKING_DIR="/current"
    mkdir -p $WORKING_DIR
    TEST_DIR="/tests"
    mkdir -p /report
    echo "Building Cver"
    cd ${WORKING_DIR}/cver
    pip3 install .
    echo "Building Cver Tests"
    cd ${WORKING_DIR}/cver/tests
    pip3 install .
fi
echo "Running tests against code src: ${WORKING_DIR}"
echo "Using tests from: ${TEST_DIR}"

cd  $TEST_DIR/unit
pytest -vvv --cov=cver --vcr-record=none -rx -s >> /report/unit-report.txt
# COVERAGE=$(awk '/---------- coverage: platform linux,/{flag=1} flag' "/report/coverage.txt")
# COVERAGE=$(awk '/TOTAL/{print $NF}' "/coverage.txt") 

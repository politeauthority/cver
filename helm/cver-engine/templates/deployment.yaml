{{- if eq .Values.app.envName "dev" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cver-engine.fullname" . }}-static
  labels:
    {{- include "cver-engine.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cver-engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        cver.deployed: "{{ .Values.app.deployedAt }}"
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cver-engine.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # serviceAccountName: {{ include "cver-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["dockerd"]
          env:
            - name: CVER_ENV
              value: "{{ .Values.app.envName }}"
            - name: CVER_API_URL
              value: "http://cver-api-{{ .Values.app.envName }}"
            - name: CVER_LOG_LEVEL
              value: "{{ .Values.app.logLevel }}"
            - name: CVER_ENGINE_DOWNLOAD_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: CVER_ENGINE_SCAN_LIMIT
                  name: cver-engine-{{- if .Values.test.test }}{{.Release.Name}}{{- end }}
            - name: CVER_ENGINE_SCAN_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: CVER_ENGINE_SCAN_LIMIT
                  name: cver-engine-{{- if .Values.test.test }}{{.Release.Name}}{{- end }}
            - name: CVER_DEPLOYED_AT
              value: "{{ .Values.app.deployedAt }}"
            {{- if .Values.test.test }}
            - name: CVER_TEST_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client-id
                  name: cver-test-creds
            - name: CVER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client-id
                  name: cver-test-creds
            - name: CVER_TEST_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: cver-test-creds
            - name: CVER_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: cver-test-creds
            - name: CVER_TEST
              value: "true"
            {{- end }}
          volumeMounts:
          - name: docker-config-json
            mountPath: /root/.docker/config.json
            subPath: config.json
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: docker-config-json
        secret:
          secretName: docker-config-json
          items:
            - key: config.json
              path: config.json
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
